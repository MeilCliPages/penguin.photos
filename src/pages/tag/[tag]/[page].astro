---
import type { GetStaticPathsOptions } from "astro";
import { getCollection } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import Thumbnail from "../../../components/mdx/Thumbnail.astro";
import Pagination from "../../../components/Pagination.astro";
import { getDate } from "../../../content/feed";
import { escapeTag, unescapeTag } from "../../../content/tag";
import { siteTitle, pagingCount } from "../../../constant";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const feedItems = await getCollection("feed");
    const uniqueTags = [...new Set(feedItems.map((feed) => feed.data.tag))];

    return uniqueTags.flatMap((tag) => {
        const filteredFeedItems = feedItems
            .filter((feedItem) => feedItem.data.tag == tag)
            .flatMap((x) =>
                x.data.images.map((y, i) => {
                    return { tag: x.data.tag, date: getDate(x), image: y, imageIndex: i };
                }),
            )
            .sort((x, y) => y.date.getTime() - x.date.getTime());
        return paginate(filteredFeedItems, { params: { tag: escapeTag(tag) }, pageSize: pagingCount });
    });
}

const { tag } = Astro.params;
const { page } = Astro.props;
---

<Layout title={siteTitle} description={`「${unescapeTag(tag)}」についての一覧です`}>
    <div class="py-4">
        <h1>{unescapeTag(tag)}</h1>
        <div class="flex flex-wrap justify-center py-4">
            {
                page.data.map((x) => (
                    <a href={`/${x.date.getFullYear()}/${x.date.getMonth() + 1}/${x.date.getDay()}/${x.imageIndex}`}>
                        <Thumbnail src={x.image} alt="Penguin" />
                    </a>
                ))
            }
        </div>
        <Pagination previousUrl={page.url.prev} nextUrl={page.url.next} />
    </div>
</Layout>
